---
title: "Adopciones de Gatos - Análisis de Supervivencia"
date: 2025-05-21
authors:
  - name: "Lauro Reyes Rosas - 214532"
  - name: " Claudia Ximena Paz Cendejas - 214570"
format: html
---

# Proyecto Final

```{r, echo=FALSE, include=FALSE}
library(rethinking)
library(DiagrammeR)
library(tidyverse)
library(dplyr)
```

## Introducción

El presente análisis se basa en el libro Statistical Rethinking de Richard McElreath (segunda edición), el cual introduce los modelos de supervivencia como herramientas adecuadas para estudiar eventos contables en el tiempo, especialmente cuando el resultado de interés es la duración hasta que ocurre un evento. Estos modelos son particularmente útiles en contextos donde algunas observaciones están censadas, es decir, no se ha observado aún el evento de interés, pero se tiene información parcial sobre el tiempo de espera.

El objetivo de este estudio es evaluar si el color del gato influye en el tiempo que tarda en ser adoptado desde su ingreso a un albergue. Esta pregunta se enmarca dentro de un modelo de supervivencia con tiempos de espera que se modelan mediante una distribución exponencial, y que considera adecuadamente los casos censados (gatos que no fueron adoptados durante el periodo de observación).

Para ello, se emplea el conjunto de datos AustinCats, incluido en el paquete rethinking, que contiene información detallada sobre más de 22,000 gatos atendidos en un refugio animal. A continuación, se presenta una descripción general de la estructura del conjunto de datos:

```{r, echo=FALSE}
data(AustinCats)
cats <- AustinCats
glimpse(cats)
```
## Tratamiento de variables

Se creó una variable binaria _color_group_ que clasifica a los gatos como "Negro" si su color es exactamente negro, y "Otro" en cualquier otro caso. A partir de esta variable, se calculó la proporción de cada grupo: 13.3% de los gatos son negros y 86.7% de otro color. La gráfica de barras resultante ilustra estas proporciones, destacando visualmente la menor representación de gatos negros en el refugio.

```{r, echo=FALSE}
# Variable binaria
cats <- cats |>
  mutate(
    color_group = if_else(color == "Black", "Negro", "Otro") 
  )

color_summary <- cats |>
  count(color_group) |>
  mutate(
    porcentaje = n / sum(n) * 100,
    label = paste0(round(porcentaje, 1), "%")
  )

ggplot(color_summary, aes(x = color_group, y = porcentaje, fill = color_group)) +
  geom_col(width = 0.6) +
  geom_text(aes(label = label), vjust = -0.5, size = 5) +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "grey70")) +
  theme_minimal() +
  labs(
    title = "Proporción de gatos por color (Negro vs Otros)",
    x = "Color del gato",
    y = "Porcentaje",
    fill = "Color"
  ) +
  ylim(0, max(color_summary$porcentaje) + 10)

```

Siguiendo el tratamiento propuesto por McElreath, se transformó la variable _out_event_ en dos indicadores binarios: adopted, que toma el valor 1 si el gato fue adoptado, y censored, que toma el valor 0 si el evento fue distinto a adopción. Este enfoque permite distinguir entre observaciones completas y censuradas, lo cual es fundamental en modelos de supervivencia.

```{r, echo=FALSE, warning=FALSE}
cats <- cats |>
  mutate(
    adopted = if_else(out_event == "Adoption", 1L, 0L),
    censored = 1L - adopted
  )

# Resumir y transformar a formato largo para graficar
event_summary <- cats %>%
  summarise(
    Adoptado = sum(adopted),
    Censurado = sum(censored)
  ) %>%
  pivot_longer(cols = everything(), names_to = "evento", values_to = "n") %>%
  mutate(
    porcentaje = n / sum(n) * 100,
    label = paste0(round(porcentaje, 1), "%")
  )

# Gráfico de barras: Adoptado vs Censurado
ggplot(event_summary, aes(x = evento, y = porcentaje, fill = evento)) +
  geom_col(width = 0.6) +
  geom_text(aes(label = label), vjust = -0.5, size = 5) +
  scale_fill_manual(values = c("Adoptado" = "steelblue", "Censurado" = "tomato")) +
  theme_minimal() +
  labs(
    title = "Proporción de gatos adoptados y censurados",
    x = "Evento de salida",
    y = "Porcentaje",
    fill = "Evento"
  ) +
  ylim(0, max(event_summary$porcentaje) + 10)

```

En este caso, el 50.8% de los gatos fueron adoptados, mientras que el 49.2% fueron censurados. Estos últimos incluyen tanto a los gatos que permanecen en el refugio como a aquellos que salieron por otras razones. Esta proporción cercana al 50% resalta la importancia de incorporar adecuadamente la censura por la derecha para evitar sesgos en la estimación de los tiempos de espera hasta la adopción.

## Modelo Generativo

### DAG

```{r}
grViz("
digraph {
  graph [ranksep = 0.2, rankdir = LR]
  node [shape=plaintext]
  U [shape=circle]
  Color
  Days
  Adoption
  edge [minlen = 3]
  U -> Adoption
  Color -> Adoption
  Adoption -> Days
}
", width = 400)
```

En este DAG:

* **U** representa factores no observados (por ejemplo, personalidad del gato o condiciones del adoptante).
* **Color** representa el color del gato, la variable de interés observada.
* **Adoption** es la tasa de adopción
* **Days** es el tiempo observado hasta la adopción (o censura), generado a partir de la tasa **Adoption**.

Este esquema refleja la suposición de que tanto el color como otros factores no observados influyen en la tasa de adopción, la cual a su vez determina el tiempo hasta la adopción o censura.

El fenómeno que se busca modelar es el tiempo que tarda un gato en ser adoptado desde su ingreso al refugio. Este tipo de variable —tiempo hasta un evento— es típicamente abordado mediante modelos de supervivencia. En este caso, se asume que los tiempos de espera siguen una distribución exponencial, adecuada cuando se supone que la probabilidad de adopción es constante a lo largo del tiempo, es decir, que la “tasa de adopción” no depende del tiempo ya transcurrido.

El tiempo de espera hasta la adopción se modela como una variable aleatoria continua con distribución exponencial:
$$D_i \sim \text{Exponencial}(\lambda_i)$$
donde:

* $D_i$: tiempo hasta la adopción o censura del gato $i$,
* $\lambda_i = \frac{1}{\mu_i}$: tasa de adopción, inversa del tiempo medio,
* $log(\mu_i) = \alpha_{c[i]}$: tiempo medio depende del grupo de color (negro u otro), con $\alpha_1$ para negros y $\alpha_2$ para otros.
**Además**:
* Si el gato no fue adoptado (censura), se simula el tiempo de espera hasta cierto umbral, y se marca como censado.
* La probabilidad de adopción condicionada a los días observados, si censado, se obtiene con la complementaria de la **CDF**:
$$Pr(D_i > d_i | \lambda_i) = exp(-\lambda_i d_i)$$

### Simulación
La siguiente función simula una muestra de N gatos en un refugio:
```{r}
sim_cats <- function(N = 10000, alpha_black = log(70), alpha_other = log(50), p_black = 0.3, p_censored = 0.49) {
  # 1 = negro, 2 = otro
  color_id <- rbinom(N, 1, p_black) + 1
  
  # Parametrización
  alpha <- c(alpha_black, alpha_other)
  mu <- exp(alpha[color_id])
  lambda <- 1 / mu
  
  # Simular tiempos verdaderos
  time_true <- rexp(N, rate = lambda)
  
  # Asignar censura de manera aleatoria (p_censored de los casos)
  censored <- rbinom(N, 1, p_censored)
  
  # Tiempo observado es igual al real si fue adoptado, o censurado artificialmente
  # Para simplificar, no truncamos el tiempo observado
  adopted <- 1L - censored
  time_obs <- time_true  # todos los tiempos son observados hasta ese punto
  
  tibble(
    color_id = color_id,
    mu = mu,
    lambda = lambda,
    time_true = time_true,
    time_obs = time_obs,
    adopted = adopted,
    censored = censored
  )
}

```

```{r, echo=FALSE}
set.seed(123)
sim <- sim_cats()
sim <- sim |> 
  mutate(
    color_group = if_else(color_id == 1, "Negro", "Otro"),
    status = if_else(adopted == 1L, "Adoptado", "Censurado")
  )

# Visualización: densidad de tiempos observados por color y estado
library(ggplot2)
ggplot(sim, aes(x = time_obs, fill = status)) +
  geom_density(alpha = 0.5, adjust = 1) +
  facet_wrap(~ color_group) +
  theme_minimal() +
  labs(
    title = "Densidad de tiempos observados por color y estado",
    x = "Tiempo observado (días)",
    y = "Densidad estimada",
    fill = "Estado"
  )
```

```{r, warning=FALSE}
grViz("
  digraph {
    graph [rankdir=LR, nodesep=1]
    node [shape=box, style=filled, fillcolor=LightGray]
    color_id [label='color_id']
    mu [label='mu']
    lambda [label='lambda']
    time_true [label='time_true']
    time_obs [label='time_obs']
    adopted [label='adopted']
    censored [label='censored']

    color_id -> mu
    mu -> lambda
    lambda -> time_true
    time_true -> time_obs
    time_obs -> adopted
    time_obs -> censored
  }
")
```

```{r}
grViz("
digraph {
  graph [ranksep = 0.2, rankdir = LR]
  node [shape=plaintext]
  Color
  Days
  Adoption
  edge [minlen = 3]
  Color -> Adoption
  Adoption -> Days
}
", width = 400)
```

```{mermaid}
graph LR
    U((U)) --> A
    C --> A
    A --> D
    style U fill:#fff,stroke:#333,stroke-width:2px
    style A fill:none,stroke:none
    style C fill:none,stroke:none
    style D fill:none,stroke:none
    linkStyle 0 stroke-width:2px,stroke:#333
    linkStyle 1 stroke-width:1px,stroke:#333
    linkStyle 2 stroke-width:1px,stroke:#333
    %% Adjust spacing (similar to ranksep)
    %%{init: {'config': {'rankSpacing': 20}}}%%
```


```{r}
grViz("
digraph {
  graph [ranksep=0.5, rankdir=LR]
  node [shape=box, fontname=Helvetica]

  Color [label='Color ID']
  mu [label='μᵢ (mean time)', shape=ellipse]
  lambda [label='λᵢ (rate)', shape=ellipse]
  A [label='Aᵢ (Adopted or Censored)']
  D [label='Dᵢ (Time to Event)']

  Color -> mu
  mu -> lambda
  lambda -> D
  A -> D
}
")

```

## Modelo considerando color sin censura

En este modelo de supervivencia exponencial se analiza el efecto del color del gato sobre el tiempo medio de adopción sin tomar en cuenta la censura, es decir, se incluyen únicamente los gatos que fueron adoptados, ignorando aquellos que aún permanecen en el refugio al finalizar el periodo de observación.

Este enfoque es más sencillo, pero puede generar estimaciones sesgadas del tiempo medio de adopción, ya que descarta intencionalmente a los gatos que tardan más en ser adoptados. Al excluir los casos censurados, se pierde información valiosa y se puede subestimar el tiempo real de espera, especialmente si hay muchos gatos no adoptados en el conjunto de datos.

Por lo tanto, aunque este modelo puede ser útil como línea base o comparación, no refleja completamente la realidad del proceso de adopción.

```{r}
cats_nc <- cats |> 
  mutate(
    color_id = if_else(color == "Black", 1L, 2L),
    adopted = if_else(out_event == "Adoption", 1L, 0L),
    days = as.numeric(days_to_event)
  ) |> 
  filter(adopted == 1L)

dat_stan_nc <- list(
  N = nrow(cats_nc),
  days = cats_nc$days,
  color = cats_nc$color_id
)

stan_code_nc <- "
data {
  int<lower=1> N;
  real<lower=0> days[N];
  int<lower=1,upper=2> color[N];
}
parameters {
  vector[2] alpha;
}
model {
  for (i in 1:N) {
    real lambda = exp(-alpha[color[i]]);
    target += exponential_lpdf(days[i] | lambda);
  }
}
"
compiled_nc <- rstan::stan_model(model_code = stan_code_nc)

fit_nc <- rstan::sampling(compiled_nc, data = dat_stan_nc, 
                          chains = 4, iter = 2000, cores = 4)

```

```{r}

post_nc <- as.data.frame(fit_nc)

mu_negro_nc <- exp(post_nc$`alpha[1]`)
mu_otro_nc  <- exp(post_nc$`alpha[2]`)

results_tbl_nc <- tibble(
  Color = c("Negro", "Otro"),
  Media = c(mean(mu_negro_nc), mean(mu_otro_nc)),
  `IC 89% Inferior` = c(quantile(mu_negro_nc, 0.055), quantile(mu_otro_nc, 0.055)),
  `IC 89% Superior` = c(quantile(mu_negro_nc, 0.945), quantile(mu_otro_nc, 0.945))
)

print(results_tbl_nc)


```

```{r}

ggplot(results_tbl_nc, aes(x = Color, y = Media, fill = Color)) +
  geom_col(width = 0.5, color = "black") +
  geom_errorbar(aes(ymin = `IC 89% Inferior`, ymax = `IC 89% Superior`), width = 0.2) +
  labs(
    title = "Tiempo medio de días considerando color sin censura",
    y = "Tiempo medio (días)", x = "Color del gato"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  theme(legend.position = "none")


```

```{r}

posterior_mu_nc <- tibble(
  mu_negro = mu_negro_nc,
  mu_otro  = mu_otro_nc
) |>
  pivot_longer(cols = everything(), names_to = "Color", values_to = "mu") |>
  mutate(Color = recode(Color,
                        "mu_negro" = "Negro",
                        "mu_otro" = "Otro"))

ggplot(posterior_mu_nc, aes(x = mu, fill = Color)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  labs(title = "Distribución posterior del tiempo medio de adopción (sin censura)",
       x = "Tiempo medio estimado (mu)",
       y = "Densidad",
       fill = "Color del gato") +
  theme_minimal()


```

Esta distribución posterior muestra la estimación del tiempo medio de adopción para gatos negros y de otros colores, considerando únicamente aquellos que fueron adoptados. Aunque se observa que los gatos negros tienden a esperar más tiempo que los de otros colores, este análisis no toma en cuenta a los gatos que aún no han sido adoptados o que salieron del refugio por otras razones. Por lo tanto, los resultados podrían subestimar el tiempo real de espera, especialmente si los casos no adoptados tienden a ser los de mayor duración.


## Modelo considerando color con censura 

En este modelo de supervivencia exponencial, analizamos el efecto del color del gato sobre el tiempo que tarda en ser adoptado, modelando dicho tiempo como una variable aleatoria con distribución exponencial cuya tasa depende del color del gato. Una ventaja de este enfoque es que permite incorporar no solo a los gatos que fueron adoptados, sino también a aquellos que no lo fueron durante el periodo de observación. A estos últimos se les considera como casos censurados, es decir, sabemos cuántos días estuvieron en el refugio sin ser adoptados, pero no conocemos el tiempo total que habrían esperado si hubieran permanecido más tiempo. Al incorporar esta información de censura en el modelo, se aprovecha mejor la evidencia disponible y se evitan sesgos en la estimación del tiempo medio de adopción por color. La inferencia se realiza bajo un enfoque bayesiano utilizando Stan.

```{r}
# Preparar datos incluyendo censura
cats <- cats |>
  mutate(
    color_id = if_else(color == "Black", 1L, 2L),
    adopted = if_else(out_event == "Adoption", 1L, 0L),
    days = as.numeric(days_to_event)
  )

dat_stan_cens <- list(
  N = nrow(cats),
  days = cats$days,
  color = cats$color_id,
  adopted = cats$adopted
)

# Modelo Stan que considera censura
stan_code_cens <- "
data {
  int<lower=1> N;
  real<lower=0> days[N];
  int<lower=1,upper=2> color[N];
  int<lower=0,upper=1> adopted[N];
}
parameters {
  vector[2] alpha;
}
model {
  for (i in 1:N) {
    real lambda = exp(-alpha[color[i]]);
    if (adopted[i] == 1)
      target += exponential_lpdf(days[i] | lambda);
    else
      target += exponential_lccdf(days[i] | lambda);
  }
}
"

# Compilar y ajustar
compiled_cens <- rstan::stan_model(model_code = stan_code_cens)
fit_cens <- rstan::sampling(compiled_cens, data = dat_stan_cens,
                            chains = 4, iter = 2000, cores = 4)

```
```{r}
post_cens <- as.data.frame(fit_cens)

mu_negro_cens <- exp(post_cens$`alpha[1]`)
mu_otro_cens  <- exp(post_cens$`alpha[2]`)

library(tibble)
results_tbl_cens <- tibble(
  Color = c("Negro", "Otro"),
  Media = c(mean(mu_negro_cens), mean(mu_otro_cens)),
  `IC 89% Inferior` = c(quantile(mu_negro_cens, 0.055), quantile(mu_otro_cens, 0.055)),
  `IC 89% Superior` = c(quantile(mu_negro_cens, 0.945), quantile(mu_otro_cens, 0.945))
)
print(results_tbl_cens)

```
```{r}

ggplot(results_tbl_cens, aes(x = Color, y = Media, fill = Color)) +
  geom_col(width = 0.5, color = "black") +
  geom_errorbar(aes(ymin = `IC 89% Inferior`, ymax = `IC 89% Superior`), width = 0.2) +
  labs(
    title = "Tiempo medio de adopción por color",
    y = "Tiempo medio (días)", x = "Color del gato"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  theme(legend.position = "none")

```
Los resultados muestran que, en promedio, los gatos negros tardan más en ser adoptados que los de otros colores. Este patrón sugiere que el color del gato podría estar asociado con un menor ritmo de adopción, aunque es importante considerar que pueden existir otros factores no observados que también influyen en este proceso.

```{r}

posterior_mu <- tibble(
  mu_negro = mu_negro_cens,
  mu_otro  = mu_otro_cens
) |> 
  pivot_longer(cols = everything(), names_to = "Color", values_to = "mu") |>
  mutate(Color = recode(Color,
                        "mu_negro" = "Negro",
                        "mu_otro" = "Otro"))

ggplot(posterior_mu, aes(x = mu, fill = Color)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  labs(title = "Distribución posterior del tiempo medio de adopción considerando censura",
       x = "Tiempo medio estimado (mu)",
       y = "Densidad",
       fill = "Color del gato") +
  theme_minimal()

```

Según la distribución posterior del tiempo medio de adopción, los gatos negros tardan consistentemente más en ser adoptados que los de otros colores, y esta diferencia está respaldada por una clara separación en sus distribuciones posteriores.

## Ajuste controlando la variable edad

Para estimar de forma más realista el efecto del color del gato sobre el tiempo de adopción, se construyó un modelo de supervivencia exponencial que controla por la edad al ingreso y además considera la censura a la derecha. Esto permite diferenciar entre gatos que fueron efectivamente adoptados y aquellos que no lo fueron durante el periodo de observación.

Se asume que el tiempo hasta la adopción sigue una distribución exponencial con una tasa específica para cada gato. Esta tasa depende del color del pelaje y la edad al ingreso. En los casos en que el evento no se observa (censura), se modela la probabilidad de no adopción hasta el día observado usando la función de supervivencia de la distribución exponencial.

Este enfoque permite estimar con mayor precisión el efecto del color, aislando posibles confusiones derivadas de diferencias sistemáticas en edad entre grupos. Así se evita atribuir al color lo que en realidad podría ser efecto de la edad.

```{r}
# Preparar los datos
cats <- cats |> 
  filter(!is.na(intake_age)) |> 
  mutate(
    color_id = if_else(color == "Black", 1L, 2L),
    age_std = as.numeric(scale(intake_age)),  # edad estandarizada
    days = as.numeric(days_to_event),
    adopted = if_else(out_event == "Adoption", 1L, 0L)  # 1 = adoptado, 0 = censurado
  )

dat_stan <- list(
  N = nrow(cats),
  days = cats$days,
  color = cats$color_id,
  age = cats$age_std,
  adopted = cats$adopted
)

# Modelo Stan con censura (usando funciones ya incluidas en Stan)
stan_model_code <- "
data {
  int<lower=1> N;
  real<lower=0> days[N];
  int<lower=1,upper=2> color[N];
  real age[N];
  int<lower=0,upper=1> adopted[N];
}
parameters {
  vector[2] alpha;
  real beta_age;
}
model {
  for (i in 1:N) {
    real mu = exp(alpha[color[i]] + beta_age * age[i]);
    real lambda = 1 / mu;

    if (adopted[i] == 1)
      target += exponential_lpdf(days[i] | lambda);
    else
      target += exponential_lccdf(days[i] | lambda);
  }
}
"

compiled_model <- rstan::stan_model(model_code = stan_model_code)
fit <- rstan::sampling(compiled_model, data = dat_stan, chains = 4, cores = 4, iter = 2000)
post <- as.data.frame(fit)

```

```{r}

# Evaluación a edad promedio
mean_age <- mean(cats$age_std, na.rm = TRUE)
mu_negro <- exp(post$`alpha[1]` + post$beta_age * mean_age)
mu_otro  <- exp(post$`alpha[2]` + post$beta_age * mean_age)

# Tabla resumen
results_tbl <- tibble(
  Color = c("Negro", "Otro"),
  Media = c(mean(mu_negro), mean(mu_otro)),
  IC_Inf = c(quantile(mu_negro, 0.055), quantile(mu_otro, 0.055)),
  IC_Sup = c(quantile(mu_negro, 0.945), quantile(mu_otro, 0.945))
)

print(results_tbl)

```

```{r}

ggplot(results_tbl, aes(x = Color, y = Media, fill = Color)) +
  geom_col(width = 0.5, color = "black") +
  geom_errorbar(aes(ymin = IC_Inf, ymax = IC_Sup), width = 0.2) +
  labs(
    title = "Tiempo medio de adopción por color y edad ",
    y = "Tiempo medio (días)", x = "Color del gato"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  theme(legend.position = "none")

```
Con estos resultados vemos que los gatos negros tienden a tardar más en ser adoptados, lo cual respalda la hipótesis de que el color podría influir en las decisiones de adopción, aunque no necesariamente sea el único factor causal 

```{r}

posterior_mu_edad <- tibble(
  mu_negro = mu_negro,
  mu_otro  = mu_otro
) |>
  pivot_longer(cols = everything(), names_to = "Color", values_to = "mu") |>
  mutate(Color = recode(Color,
                        "mu_negro" = "Negro",
                        "mu_otro" = "Otro"))

ggplot(posterior_mu_edad, aes(x = mu, fill = Color)) +
  geom_density(alpha = 0.6) +
  scale_fill_manual(values = c("Negro" = "black", "Otro" = "gray70")) +
  labs(title = "Distribución posterior del tiempo medio de adopción (ajustado por edad)",
       x = "Tiempo medio estimado (mu)",
       y = "Densidad",
       fill = "Color del gato") +
  theme_minimal()


```

Esta distribución posterior muestra los tiempos medios estimados de adopción para gatos negros y de otros colores, ajustando por edad al ingreso. Al incorporar la edad como covariable, se controla por posibles diferencias sistemáticas en la edad entre grupos. Aun así, los gatos negros presentan un mayor tiempo medio de espera, lo que sugiere que el color sigue teniendo un efecto importante en la adopción, incluso cuando se consideran diferencias en edad. Esto refuerza la hipótesis de que existen factores adicionales, como sesgos perceptuales, que podrían influir en las decisiones de adopción.


## Conclusiones

- El modelo **con censura** incorpora toda la información, incluyendo gatos aún no adoptados, y ofrece estimaciones más realistas.
- El modelo **sin censura** ignora casos censurados, lo que puede subestimar el tiempo real de espera.
- En ambos modelos, se observa que los gatos negros tienden a tardar más en ser adoptados.
- Al controlar por **edad**, se refina la estimación y se reduce el riesgo de atribuir erróneamente efectos al color que podrían deberse a diferencias de edad.


